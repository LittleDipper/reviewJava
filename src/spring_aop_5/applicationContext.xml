<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- 指定spring读取db.properties配置 -->
	<context:property-placeholder location="classpath:spring_aop_5/db.properties"/>
	<!-- 1.将连接池放入spring容器 ，连接池所需的三大连接参数从db.properties文件中读取-->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 2.将JDBCTemplate放入spring容器  JDBCTemplate需要数据源-->
	<!-- <bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name="dataSource" ref="dataSource" ></property> 
	</bean> -->
	
	<!-- UserDaoImpl已经继承了JdbcDaoSupport,则Dao层不在直接依赖JdbcTemplate了，而是直接依赖数据源DataSource -->
	<bean name="userDao" class="spring_aop_5.dao.impl.UserDaoImpl">
		 <property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置基本扫描  使用注解配置 -->
	<context:component-scan base-package="spring_aop_5"></context:component-scan>
	

</beans>
